{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Router from \"next/router\";\n\nconst _saveCart = item => {\n  let cart = getCart();\n  let found;\n  cart = cart.map(_item => {\n    if (_item.produto === item.produto && _item.variacao === item.variacao) {\n      found = true;\n      return _objectSpread({}, _item, {\n        quantidade: Number(_item.quantidade) + Number(item.quantidade)\n      });\n    } else return _item;\n  });\n  if (!found) cart.push(item);\n  localStorage.setItem(\"@cart\", JSON.stringify(cart));\n};\n\nexport const getCart = () => JSON.parse(localStorage.getItem(\"@cart\") || \"[]\");\nexport const cleanCart = () => localStorage.removeItem(\"@cart\");\nexport const addCart = (item, goToCart = true) => {\n  _saveCart(item);\n\n  if (goToCart) Router.push(\"/carrinho\");\n};\nexport const getCountItemsCart = () => getCart().reduce((c, {\n  quantidade\n}) => c + (Number(quantidade) || 1), 0);\nexport const removeCart = index => {\n  let cart = getCart();\n  cart = cart.reduce((all, item, _index) => index !== _index ? all.concat([item]) : all, []);\n  localStorage.setItem(\"@cart\", JSON.stringify(cart));\n};\nexport default {\n  getCart,\n  addCart,\n  cleanCart,\n  getCountItemsCart,\n  removeCart\n};","map":{"version":3,"sources":["/var/fernando/react/next-anp/utils/cart.js"],"names":["Router","_saveCart","item","cart","getCart","found","map","_item","produto","variacao","quantidade","Number","push","localStorage","setItem","JSON","stringify","parse","getItem","cleanCart","removeItem","addCart","goToCart","getCountItemsCart","reduce","c","removeCart","index","all","_index","concat"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,SAAS,GAAIC,IAAD,IAAU;AACxB,MAAIC,IAAI,GAAGC,OAAO,EAAlB;AAEA,MAAIC,KAAJ;AACAF,EAAAA,IAAI,GAAGA,IAAI,CAACG,GAAL,CAAUC,KAAD,IAAW;AACvB,QACIA,KAAK,CAACC,OAAN,KAAkBN,IAAI,CAACM,OAAvB,IACAD,KAAK,CAACE,QAAN,KAAmBP,IAAI,CAACO,QAF5B,EAGC;AACGJ,MAAAA,KAAK,GAAG,IAAR;AACA,+BAAYE,KAAZ;AAAmBG,QAAAA,UAAU,EAAEC,MAAM,CAACJ,KAAK,CAACG,UAAP,CAAN,GAA2BC,MAAM,CAACT,IAAI,CAACQ,UAAN;AAAhE;AACH,KAND,MAMO,OAAOH,KAAP;AACV,GARM,CAAP;AASA,MAAG,CAACF,KAAJ,EAAWF,IAAI,CAACS,IAAL,CAAUV,IAAV;AAEXW,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAA9B;AACH,CAhBD;;AAkBA,OAAO,MAAMC,OAAO,GAAG,MAAMW,IAAI,CAACE,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAtB;AAEP,OAAO,MAAMC,SAAS,GAAG,MAAMN,YAAY,CAACO,UAAb,CAAwB,OAAxB,CAAxB;AAEP,OAAO,MAAMC,OAAO,GAAG,CAACnB,IAAD,EAAOoB,QAAQ,GAAG,IAAlB,KAA2B;AAC9CrB,EAAAA,SAAS,CAACC,IAAD,CAAT;;AACA,MAAGoB,QAAH,EAAatB,MAAM,CAACY,IAAP,CAAY,WAAZ;AAChB,CAHM;AAKP,OAAO,MAAMW,iBAAiB,GAAG,MACrBnB,OAAO,GAAGoB,MAAV,CACI,CAACC,CAAD,EAAI;AAAEf,EAAAA;AAAF,CAAJ,KACAe,CAAC,IAAId,MAAM,CAACD,UAAD,CAAN,IAAsB,CAA1B,CAFL,EAEoC,CAFpC,CADL;AAKP,OAAO,MAAMgB,UAAU,GAAIC,KAAD,IAAW;AACjC,MAAIxB,IAAI,GAAGC,OAAO,EAAlB;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACqB,MAAL,CACH,CAACI,GAAD,EAAM1B,IAAN,EAAY2B,MAAZ,KACAF,KAAK,KAAKE,MAAV,GAAmBD,GAAG,CAACE,MAAJ,CAAW,CAAC5B,IAAD,CAAX,CAAnB,GAAwC0B,GAFrC,EAE0C,EAF1C,CAAP;AAIAf,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAA9B;AACH,CAPM;AASP,eAAe;AACXC,EAAAA,OADW;AAEXiB,EAAAA,OAFW;AAGXF,EAAAA,SAHW;AAIXI,EAAAA,iBAJW;AAKXG,EAAAA;AALW,CAAf","sourcesContent":["import Router from \"next/router\";\n\nconst _saveCart = (item) => {\n    let cart = getCart();\n\n    let found;\n    cart = cart.map((_item) => {\n        if(\n            _item.produto === item.produto &&\n            _item.variacao === item.variacao \n        ){\n            found = true;\n            return { ..._item, quantidade: Number(_item.quantidade) + Number(item.quantidade) }\n        } else return _item;\n    });\n    if(!found) cart.push(item);\n\n    localStorage.setItem(\"@cart\", JSON.stringify(cart));\n}\n\nexport const getCart = () => JSON.parse(localStorage.getItem(\"@cart\") || \"[]\");\n\nexport const cleanCart = () => localStorage.removeItem(\"@cart\");\n\nexport const addCart = (item, goToCart = true) => {\n    _saveCart(item);\n    if(goToCart) Router.push(\"/carrinho\");\n};\n\nexport const getCountItemsCart = () => \n            getCart().reduce(\n                (c, { quantidade }) => \n                c + (Number(quantidade) || 1) , 0);\n\nexport const removeCart = (index) => {\n    let cart = getCart();\n    cart = cart.reduce(\n        (all, item, _index) =>\n        index !== _index ? all.concat([item]) : all, []\n    );\n    localStorage.setItem(\"@cart\", JSON.stringify(cart));\n}\n\nexport default {\n    getCart,\n    addCart,\n    cleanCart,\n    getCountItemsCart,\n    removeCart\n};"]},"metadata":{},"sourceType":"module"}