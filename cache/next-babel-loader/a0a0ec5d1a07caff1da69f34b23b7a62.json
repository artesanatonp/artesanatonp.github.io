{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Router from \"next/router\";\n\nvar _saveCart = function _saveCart(item) {\n  var cart = getCart();\n  var found;\n  cart = cart.map(function (_item) {\n    if (_item.produto === item.produto && _item.variacao === item.variacao) {\n      found = true;\n      return _objectSpread({}, _item, {\n        quantidade: Number(_item.quantidade) + Number(item.quantidade)\n      });\n    } else return _item;\n  });\n  if (!found) cart.push(item);\n  localStorage.setItem(\"@cart\", JSON.stringify(cart));\n};\n\nexport var getCart = function getCart() {\n  return JSON.parse(localStorage.getItem(\"@cart\") || \"[]\");\n};\nexport var cleanCart = function cleanCart() {\n  return localStorage.removeItem(\"@cart\");\n};\nexport var addCart = function addCart(item) {\n  var goToCart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  _saveCart(item);\n\n  if (goToCart) Router.push(\"/carrinho\");\n};\nexport var getCountItemsCart = function getCountItemsCart() {\n  return getCart().reduce(function (c, _ref) {\n    var quantidade = _ref.quantidade;\n    return c + (Number(quantidade) || 1);\n  }, 0);\n};\nexport var removeCart = function removeCart(index) {\n  var cart = getCart();\n  cart = cart.reduce(function (all, item, _index) {\n    return index !== _index ? all.concat([item]) : all;\n  }, []);\n  localStorage.setItem(\"@cart\", JSON.stringify(cart));\n};\nexport default {\n  getCart: getCart,\n  addCart: addCart,\n  cleanCart: cleanCart,\n  getCountItemsCart: getCountItemsCart,\n  removeCart: removeCart\n};","map":null,"metadata":{},"sourceType":"module"}