{"version":3,"file":"static/webpack/static/development/pages/_app.js.f683af2b6ac5d248a9d7.hot-update.js","sources":["webpack:///./node_modules/redux-thunk/es/index.js","webpack:///./pages/_app.js","webpack:///./redux/index.js"],"sourcesContent":["function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexport default thunk;","import { Provider } from 'react-redux';\nimport App, { Container } from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport { initStore } from '../redux';\n\nclass Principal extends App {\n    static async getInitialProps({ Component, ctx }){\n        return {\n            pageProps: Component.getInitialProps ? await Component.getInitialProps(ctx) : {}\n        }\n    }\n\n    render(){\n        const { Component, pageProps, store } = this.props;\n        return(\n            <Container>\n                <Provider store={store}>\n                    <Component {...pageProps} />\n                </Provider> \n            </Container>\n        );\n    }\n}\n\nexport default withRedux(initStore)(Principal);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nexport const initStore = (initialState = {}) => \n                    createStore(reducer, initialState, applyMiddleware(thunk));"],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;AAfA;AACA;AACA;;;;;;AAAA;AACA;;;;;;;AADA;AACA;;;;AADA;;;;;;;;;;;;;AAHA;AACA;AAkBA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;A","sourceRoot":""}